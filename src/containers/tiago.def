Bootstrap: docker
From: ros:melodic

%post
apt update
apt install git python-rosinstall ros-melodic-desktop-full python-catkin-tools ros-melodic-joint-state-controller ros-melodic-twist-mux ros-melodic-ompl ros-melodic-controller-manager ros-melodic-moveit-core ros-melodic-moveit-ros-perception ros-melodic-moveit-ros-move-group ros-melodic-moveit-kinematics ros-melodic-moveit-ros-planning-interface ros-melodic-moveit-simple-controller-manager ros-melodic-moveit-planners-ompl ros-melodic-joy ros-melodic-joy-teleop ros-melodic-teleop-tools ros-melodic-control-toolbox ros-melodic-sound-play ros-melodic-navigation ros-melodic-depthimage-to-laserscan ros-melodic-moveit-commander ros-melodic-smach ros-melodic-smach-ros ros-melodic-executive-smach ros-melodic-smach-viewer python3-pip wget -y
apt install portaudio19-dev python-pyaudio python3-pyaudio festival -y
pip3 install catkin_tools rospkg numpy empy dialogflow==0.5.1 google-api-core==1.4.1 sounddevice soundfile
#pip3 install torch>=1.0 torchvision pillow # uncomment this line out to build with GPU related dependencies.

. /opt/ros/melodic/setup.sh

mkdir /opt/tiago_public_ws
cd /opt/tiago_public_ws
wget https://raw.githubusercontent.com/pal-robotics/tiago_tutorials/kinetic-devel/tiago_public-melodic.rosinstall
rosinstall src /opt/ros/melodic tiago_public-melodic.rosinstall

#rosdep init
rosdep update

rosdep install --from-paths src --ignore-src -y --rosdistro melodic --skip-keys="opencv2 opencv2-nonfree pal_laser_filters speed_limit_node sensor_to_cloud hokuyo_node libdw-dev python-graphitesend-pip python-statsd pal_filters pal_vo_server pal_usb_utils pal_pcl pal_pcl_points_throttle_and_filter pal_karto pal_local_joint_control camera_calibration_files pal_startup_msgs pal-orbbec-openni2 dummy_actuators_manager pal_local_planner gravity_compensation_controller current_limit_controller dynamic_footprint dynamixel_cpp tf_lookup opencv3 joint_impedance_trajectory_controller cartesian_impedance_controller omni_base_description omni_drive_controller"
catkin build -DCATKIN_ENABLE_TESTING=0 -j $(expr `nproc` / 2)

ln -s /bin/bash /usr/bin/bash

echo "source /opt/ros/melodic/setup.bash" >> /opt/env.sh
echo "source /opt/tiago_public_ws/devel/setup.bash" >> /opt/env.sh
echo "export SHELL='/bin/bash'" >> /opt/env.sh
echo "echo 'I am in Singularity!'" >> /opt/env.sh

%environment


%runscript
    exec bash --init-file /opt/env.sh
